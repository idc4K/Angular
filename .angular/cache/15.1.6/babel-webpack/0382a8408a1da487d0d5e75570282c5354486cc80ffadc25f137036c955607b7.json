{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SnapService {\n  constructor() {\n    this.data = [{\n      id: 1,\n      title: \"Ours App\",\n      desc: \"I want to be perfect in angular\",\n      createdDate: new Date(),\n      snaps: 0,\n      cdt: false\n    }, {\n      id: 2,\n      title: \"Ours App second\",\n      desc: \"I want to be perfect in angular\",\n      createdDate: new Date(),\n      snaps: 0,\n      cdt: false\n    }];\n  }\n  getAll() {\n    return this.data;\n  }\n  snapById(dataId) {\n    const obj = this.data.find(obj => obj.id === dataId);\n    if (obj) {\n      obj.snaps++;\n    } else {\n      throw new Error(\"Snap not find\");\n    }\n  }\n  getSnapById(snapId) {\n    const obj = this.data.find(obj => obj.id === snapId);\n    if (!obj) {\n      throw new Error(\"Snap not find\");\n    } else {\n      return obj;\n    }\n  }\n}\nSnapService.ɵfac = function SnapService_Factory(t) {\n  return new (t || SnapService)();\n};\nSnapService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SnapService,\n  factory: SnapService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EAHxBC;IAIG,SAAI,GAAY,CACf;MACEC,EAAE,EAAG,CAAC;MACNC,KAAK,EAAG,UAAU;MAClBC,IAAI,EAAG,iCAAiC;MACxCC,WAAW,EAAG,IAAIC,IAAI,EAAE;MACxBC,KAAK,EAAE,CAAC;MACRC,GAAG,EAAC;KAEL,EACD;MACEN,EAAE,EAAG,CAAC;MACNC,KAAK,EAAG,iBAAiB;MACzBC,IAAI,EAAG,iCAAiC;MACxCC,WAAW,EAAG,IAAIC,IAAI,EAAE;MACxBC,KAAK,EAAE,CAAC;MACRC,GAAG,EAAC;KAEL,CACF;;EAEDC,MAAM;IACJ,OAAO,IAAI,CAACC,IAAI;EAClB;EACAC,QAAQ,CAACC,MAAe;IACtB,MAAMC,GAAG,GAAG,IAAI,CAACH,IAAI,CAACI,IAAI,CAACD,GAAG,IAAIA,GAAG,CAACX,EAAE,KAAKU,MAAM,CAAC;IACpD,IAAGC,GAAG,EAAC;MACHA,GAAG,CAACN,KAAK,EAAE;KACd,MACG;MACA,MAAM,IAAIQ,KAAK,CAAC,eAAe,CAAC;;EAEtC;EACAC,WAAW,CAACC,MAAe;IACzB,MAAMJ,GAAG,GAAG,IAAI,CAACH,IAAI,CAACI,IAAI,CAACD,GAAG,IAAIA,GAAG,CAACX,EAAE,KAAKe,MAAM,CAAC;IACpD,IAAG,CAACJ,GAAG,EAAC;MACJ,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;KACnC,MACG;MACA,OAAOF,GAAG;;EAEhB;;AA1CWb,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFP;AAAM","names":["SnapService","constructor","id","title","desc","createdDate","Date","snaps","cdt","getAll","data","snapById","dataId","obj","find","Error","getSnapById","snapId","factory","providedIn"],"sourceRoot":"","sources":["/home/idc4k/projet/Angular/Angular/src/app/services/snap.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\nimport {Data} from \"../module/snap.mode\"\n\n@Injectable({\n    providedIn : \"root\"\n})\nexport class SnapService {\n   data : Data[] = [\n    {\n      id : 1,\n      title : \"Ours App\",\n      desc : \"I want to be perfect in angular\",\n      createdDate : new Date(),\n      snaps: 0,\n      cdt:false\n      \n    },\n    {\n      id : 2,\n      title : \"Ours App second\",\n      desc : \"I want to be perfect in angular\",\n      createdDate : new Date(),\n      snaps: 0,\n      cdt:false\n      \n    }\n  ]\n\n  getAll(): Data[]{\n    return this.data\n  }\n  snapById(dataId : number): void{\n    const obj = this.data.find(obj => obj.id === dataId)\n    if(obj){\n        obj.snaps++\n    }\n    else{\n        throw new Error(\"Snap not find\")\n    }\n  }\n  getSnapById(snapId : number) : Data{\n    const obj = this.data.find(obj => obj.id === snapId)\n    if(!obj){\n        throw new Error(\"Snap not find\")\n    }\n    else{\n        return obj\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}